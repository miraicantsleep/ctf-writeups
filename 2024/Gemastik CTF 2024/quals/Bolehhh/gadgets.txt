


Gadgets
=======


0x000000000040112e: adc dword ptr [rax], edi; test rax, rax; je 0x1140; mov edi, 0x404048; jmp rax; 
0x00000000004010bc: adc eax, 0x2f17; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x00000000004010ec: adc edi, dword ptr [rax]; test rax, rax; je 0x1100; mov edi, 0x404048; jmp rax; 
0x000000000040115c: adc edx, dword ptr [rbp + 0x48]; mov ebp, esp; call 0x10e0; mov byte ptr [rip + 0x2f1b], 1; pop rbp; ret; 
0x00000000004010c0: add ah, dh; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000401278: add al, ch; ret 0xfffd; 
0x00000000004010ba: add bh, bh; adc eax, 0x2f17; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x000000000040100a: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000401276: add byte ptr [rax], al; add al, ch; ret 0xfffd; 
0x0000000000401504: add byte ptr [rax], al; add byte ptr [rax], al; call 0x1060; nop; leave; ret; 
0x00000000004010c8: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; ret; 
0x00000000004010ee: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x1100; mov edi, 0x404048; jmp rax; 
0x0000000000401130: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x1140; mov edi, 0x404048; jmp rax; 
0x0000000000401506: add byte ptr [rax], al; call 0x1060; nop; leave; ret; 
0x00000000004013e4: add byte ptr [rax], al; mov rdi, rax; call 0x1030; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x00000000004014d4: add byte ptr [rax], al; mov rdi, rax; call 0x1030; leave; ret; 
0x0000000000401564: add byte ptr [rax], al; mov rdi, rax; call 0x1070; nop; pop rbp; ret; 
0x00000000004010ca: add byte ptr [rax], al; nop dword ptr [rax]; ret; 
0x0000000000401009: add byte ptr [rax], al; test rax, rax; je 0x1012; call rax; 
0x0000000000401009: add byte ptr [rax], al; test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x00000000004010f0: add byte ptr [rax], al; test rax, rax; je 0x1100; mov edi, 0x404048; jmp rax; 
0x0000000000401132: add byte ptr [rax], al; test rax, rax; je 0x1140; mov edi, 0x404048; jmp rax; 
0x00000000004010bf: add byte ptr [rax], al; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x000000000040116b: add byte ptr [rcx], al; pop rbp; ret; 
0x00000000004010b9: add dil, dil; adc eax, 0x2f17; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000401006: add eax, 0x2fd5; test rax, rax; je 0x1012; call rax; 
0x0000000000401006: add eax, 0x2fd5; test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x00000000004014d1: add eax, 0xc22; mov rdi, rax; call 0x1030; leave; ret; 
0x0000000000401013: add esp, 8; ret; 
0x0000000000401012: add rsp, 8; ret; 
0x00000000004013e9: call 0x1030; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x00000000004014d9: call 0x1030; leave; ret; 
0x00000000004011a1: call 0x1050; mov rdi, rax; call 0x1080; leave; ret; 
0x0000000000401508: call 0x1060; nop; leave; ret; 
0x0000000000401569: call 0x1070; nop; pop rbp; ret; 
0x00000000004011a9: call 0x1080; leave; ret; 
0x0000000000401161: call 0x10e0; mov byte ptr [rip + 0x2f1b], 1; pop rbp; ret; 
0x00000000004010bb: call qword ptr [rip + 0x2f17]; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000401010: call rax; 
0x0000000000401010: call rax; add rsp, 8; ret; 
0x00000000004013ed: dec dword ptr [rax - 0x75]; pop rbp; clc; leave; ret; 
0x00000000004011ad: dec ecx; ret; 
0x0000000000401002: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x2fd5; test rax, rax; je 0x1012; call rax; 
0x0000000000401656: inc dword ptr [rax]; sub rsp, 8; add rsp, 8; ret; 
0x000000000040100e: je 0x1012; call rax; 
0x000000000040100e: je 0x1012; call rax; add rsp, 8; ret; 
0x00000000004010eb: je 0x1100; mov eax, 0; test rax, rax; je 0x1100; mov edi, 0x404048; jmp rax; 
0x00000000004010f5: je 0x1100; mov edi, 0x404048; jmp rax; 
0x000000000040112d: je 0x1140; mov eax, 0; test rax, rax; je 0x1140; mov edi, 0x404048; jmp rax; 
0x0000000000401137: je 0x1140; mov edi, 0x404048; jmp rax; 
0x00000000004014cd: jle 0x149b; lea rax, [rip + 0xc22]; mov rdi, rax; call 0x1030; leave; ret; 
0x00000000004010fc: jmp rax; 
0x00000000004014d0: lea eax, [rip + 0xc22]; mov rdi, rax; call 0x1030; leave; ret; 
0x00000000004014cf: lea rax, [rip + 0xc22]; mov rdi, rax; call 0x1030; leave; ret; 
0x0000000000401166: mov byte ptr [rip + 0x2f1b], 1; pop rbp; ret; 
0x0000000000401503: mov eax, 0; call 0x1060; nop; leave; ret; 
0x00000000004010ed: mov eax, 0; test rax, rax; je 0x1100; mov edi, 0x404048; jmp rax; 
0x000000000040112f: mov eax, 0; test rax, rax; je 0x1140; mov edi, 0x404048; jmp rax; 
0x0000000000401005: mov eax, dword ptr [rip + 0x2fd5]; test rax, rax; je 0x1012; call rax; 
0x0000000000401005: mov eax, dword ptr [rip + 0x2fd5]; test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x000000000040115f: mov ebp, esp; call 0x10e0; mov byte ptr [rip + 0x2f1b], 1; pop rbp; ret; 
0x00000000004013ef: mov ebx, dword ptr [rbp - 8]; leave; ret; 
0x00000000004010f7: mov edi, 0x404048; jmp rax; 
0x00000000004013e7: mov edi, eax; call 0x1030; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x00000000004014d7: mov edi, eax; call 0x1030; leave; ret; 
0x000000000040119f: mov edi, eax; call 0x1050; mov rdi, rax; call 0x1080; leave; ret; 
0x0000000000401567: mov edi, eax; call 0x1070; nop; pop rbp; ret; 
0x00000000004011a7: mov edi, eax; call 0x1080; leave; ret; 
0x0000000000401501: mov edi, eax; mov eax, 0; call 0x1060; nop; leave; ret; 
0x0000000000401004: mov rax, qword ptr [rip + 0x2fd5]; test rax, rax; je 0x1012; call rax; 
0x0000000000401004: mov rax, qword ptr [rip + 0x2fd5]; test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x000000000040115e: mov rbp, rsp; call 0x10e0; mov byte ptr [rip + 0x2f1b], 1; pop rbp; ret; 
0x00000000004013ee: mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x00000000004013e6: mov rdi, rax; call 0x1030; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x00000000004014d6: mov rdi, rax; call 0x1030; leave; ret; 
0x000000000040119e: mov rdi, rax; call 0x1050; mov rdi, rax; call 0x1080; leave; ret; 
0x0000000000401566: mov rdi, rax; call 0x1070; nop; pop rbp; ret; 
0x00000000004011a6: mov rdi, rax; call 0x1080; leave; ret; 
0x0000000000401500: mov rdi, rax; mov eax, 0; call 0x1060; nop; leave; ret; 
0x00000000004010c4: nop dword ptr [rax + rax]; nop dword ptr [rax]; ret; 
0x00000000004010cc: nop dword ptr [rax]; ret; 
0x00000000004010c3: nop dword ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x00000000004010c2: nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000401003: or byte ptr [rax - 0x75], cl; add eax, 0x2fd5; test rax, rax; je 0x1012; call rax; 
0x00000000004010f6: or dword ptr [rdi + 0x404048], edi; jmp rax; 
0x00000000004013f0: pop rbp; clc; leave; ret; 
0x000000000040116d: pop rbp; ret; 
0x000000000040115d: push rbp; mov rbp, rsp; call 0x10e0; mov byte ptr [rip + 0x2f1b], 1; pop rbp; ret; 
0x0000000000401042: ret 0x2f; 
0x0000000000401292: ret 0x80be; 
0x0000000000401211: ret 0x8d48; 
0x000000000040127a: ret 0xfffd; 
0x00000000004014fe: ror byte ptr [r8 - 0x77], 0xc7; mov eax, 0; call 0x1060; nop; leave; ret; 
0x00000000004014ff: ror byte ptr [rax - 0x77], 0xc7; mov eax, 0; call 0x1060; nop; leave; ret; 
0x000000000040100d: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000401659: sub esp, 8; add rsp, 8; ret; 
0x0000000000401001: sub esp, 8; mov rax, qword ptr [rip + 0x2fd5]; test rax, rax; je 0x1012; call rax; 
0x0000000000401658: sub rsp, 8; add rsp, 8; ret; 
0x0000000000401000: sub rsp, 8; mov rax, qword ptr [rip + 0x2fd5]; test rax, rax; je 0x1012; call rax; 
0x00000000004010c6: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; ret; 
0x000000000040100c: test eax, eax; je 0x1012; call rax; 
0x000000000040100c: test eax, eax; je 0x1012; call rax; add rsp, 8; ret; 
0x00000000004010f3: test eax, eax; je 0x1100; mov edi, 0x404048; jmp rax; 
0x0000000000401135: test eax, eax; je 0x1140; mov edi, 0x404048; jmp rax; 
0x000000000040100b: test rax, rax; je 0x1012; call rax; 
0x000000000040100b: test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x00000000004010f2: test rax, rax; je 0x1100; mov edi, 0x404048; jmp rax; 
0x0000000000401134: test rax, rax; je 0x1140; mov edi, 0x404048; jmp rax; 
0x00000000004013f1: clc; leave; ret; 
0x00000000004010c1: hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x00000000004011ae: leave; ret; 
0x000000000040156e: nop; pop rbp; ret; 
0x000000000040150d: nop; leave; ret; 
0x00000000004010ff: nop; ret; 
0x0000000000401016: ret; 

115 gadgets found
