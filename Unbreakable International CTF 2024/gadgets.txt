


Gadgets
=======


0x0000000000401168: adc al, 0x25; add dword ptr [rax], eax; add byte ptr [rax], al; imul edx; shr rdx, 0x3f; ret; 
0x000000000040108c: adc dword ptr [rax], eax; call qword ptr [rip + 0x2f5b]; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x00000000004010fe: adc dword ptr [rax], edi; test rax, rax; je 0x1110; mov edi, 0x404038; jmp rax; 
0x0000000000401090: adc eax, 0x2f5b; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x00000000004010bc: adc edi, dword ptr [rax]; test rax, rax; je 0x10d0; mov edi, 0x404038; jmp rax; 
0x000000000040112c: adc edx, dword ptr [rbp + 0x48]; mov ebp, esp; call 0x10b0; mov byte ptr [rip + 0x2f2b], 1; pop rbp; ret; 
0x0000000000401094: add ah, dh; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040108e: add bh, bh; adc eax, 0x2f5b; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040100e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004010be: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x10d0; mov edi, 0x404038; jmp rax; 
0x0000000000401100: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x1110; mov edi, 0x404038; jmp rax; 
0x000000000040109c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x000000000040116c: add byte ptr [rax], al; imul edx; shr rdx, 0x3f; ret; 
0x000000000040119d: add byte ptr [rax], al; mov dword ptr [rip + 0x2ed7], 0x68732f6e; mov byte ptr [rip + 0x2ed4], 0; nop; pop rbp; ret; 
0x0000000000401245: add byte ptr [rax], al; mov rdi, rax; call 0x1050; nop; leave; ret; 
0x000000000040100d: add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; 
0x000000000040100d: add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x00000000004010c0: add byte ptr [rax], al; test rax, rax; je 0x10d0; mov edi, 0x404038; jmp rax; 
0x0000000000401102: add byte ptr [rax], al; test rax, rax; je 0x1110; mov edi, 0x404038; jmp rax; 
0x0000000000401252: add byte ptr [rax], al; endbr64; sub rsp, 8; add rsp, 8; ret; 
0x000000000040109e: add byte ptr [rax], al; endbr64; ret; 
0x0000000000401093: add byte ptr [rax], al; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x00000000004011ae: add byte ptr [rax], al; nop; pop rbp; ret; 
0x000000000040113b: add byte ptr [rcx], al; pop rbp; ret; 
0x00000000004011a4: add byte ptr [rsi + 0x2f], ch; jae 0x1211; mov byte ptr [rip + 0x2ed4], 0; nop; pop rbp; ret; 
0x000000000040119c: add byte ptr cs:[rax], al; mov dword ptr [rip + 0x2ed7], 0x68732f6e; mov byte ptr [rip + 0x2ed4], 0; nop; pop rbp; ret; 
0x000000000040108d: add dil, dil; adc eax, 0x2f5b; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040116a: add dword ptr [rax], eax; add byte ptr [rax], al; imul edx; shr rdx, 0x3f; ret; 
0x000000000040100a: add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; 
0x000000000040100a: add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x0000000000401165: add eax, eax; mov dword ptr [1], edx; imul edx; shr rdx, 0x3f; ret; 
0x0000000000401017: add esp, 8; ret; 
0x0000000000401016: add rsp, 8; ret; 
0x0000000000401169: and eax, 1; imul edx; shr rdx, 0x3f; ret; 
0x000000000040124a: call 0x1050; nop; leave; ret; 
0x0000000000401131: call 0x10b0; mov byte ptr [rip + 0x2f2b], 1; pop rbp; ret; 
0x00000000004011b7: call qword ptr [rax - 0x1bceb270]; mov r12, rax; ret; 
0x000000000040108f: call qword ptr [rip + 0x2f5b]; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401014: call rax; 
0x0000000000401014: call rax; add rsp, 8; ret; 
0x000000000040115e: idiv edx; ret; 
0x000000000040116e: imul edx; shr rdx, 0x3f; ret; 
0x00000000004011bc: in al, 0x49; mov esp, eax; ret; 
0x0000000000401006: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; 
0x00000000004011ce: inc al; ret; 
0x00000000004011a7: jae 0x1211; mov byte ptr [rip + 0x2ed4], 0; nop; pop rbp; ret; 
0x0000000000401012: je 0x1016; call rax; 
0x0000000000401012: je 0x1016; call rax; add rsp, 8; ret; 
0x00000000004010bb: je 0x10d0; mov eax, 0; test rax, rax; je 0x10d0; mov edi, 0x404038; jmp rax; 
0x00000000004010c5: je 0x10d0; mov edi, 0x404038; jmp rax; 
0x00000000004010fd: je 0x1110; mov eax, 0; test rax, rax; je 0x1110; mov edi, 0x404038; jmp rax; 
0x0000000000401107: je 0x1110; mov edi, 0x404038; jmp rax; 
0x00000000004010cc: jmp rax; 
0x00000000004011c6: mov bl, 0x90; nop; nop; nop; syscall; 
0x00000000004011a9: mov byte ptr [rip + 0x2ed4], 0; nop; pop rbp; ret; 
0x0000000000401136: mov byte ptr [rip + 0x2f2b], 1; pop rbp; ret; 
0x0000000000401167: mov dword ptr [1], edx; imul edx; shr rdx, 0x3f; ret; 
0x000000000040119f: mov dword ptr [rip + 0x2ed7], 0x68732f6e; mov byte ptr [rip + 0x2ed4], 0; nop; pop rbp; ret; 
0x00000000004010bd: mov eax, 0; test rax, rax; je 0x10d0; mov edi, 0x404038; jmp rax; 
0x00000000004010ff: mov eax, 0; test rax, rax; je 0x1110; mov edi, 0x404038; jmp rax; 
0x0000000000401009: mov eax, dword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x0000000000401009: mov eax, dword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x000000000040112f: mov ebp, esp; call 0x10b0; mov byte ptr [rip + 0x2f2b], 1; pop rbp; ret; 
0x000000000040115c: mov ecx, edx; idiv edx; ret; 
0x00000000004010c7: mov edi, 0x404038; jmp rax; 
0x0000000000401248: mov edi, eax; call 0x1050; nop; leave; ret; 
0x0000000000401242: mov esi, 0x258; mov rdi, rax; call 0x1050; nop; leave; ret; 
0x00000000004011c5: mov esi, eax; ret; 
0x00000000004011be: mov esp, eax; ret; 
0x00000000004011bd: mov r12, rax; ret; 
0x0000000000401008: mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x0000000000401008: mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x000000000040112e: mov rbp, rsp; call 0x10b0; mov byte ptr [rip + 0x2f2b], 1; pop rbp; ret; 
0x000000000040115b: mov rcx, rdx; idiv edx; ret; 
0x0000000000401247: mov rdi, rax; call 0x1050; nop; leave; ret; 
0x00000000004011c4: mov rsi, rax; ret; 
0x0000000000401098: nop dword ptr [rax + rax]; endbr64; ret; 
0x0000000000401097: nop dword ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401096: nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401007: or byte ptr [rax - 0x75], cl; add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; 
0x00000000004010c6: or dword ptr [rdi + 0x404038], edi; jmp rax; 
0x000000000040113d: pop rbp; ret; 
0x0000000000401156: pop rdi; ret; 
0x000000000040112d: push rbp; mov rbp, rsp; call 0x10b0; mov byte ptr [rip + 0x2f2b], 1; pop rbp; ret; 
0x00000000004011b5: sal byte ptr [rcx], cl; call qword ptr [rax - 0x1bceb270]; mov r12, rax; ret; 
0x0000000000401011: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000040115d: sal edi, 1; cli; ret; 
0x0000000000401171: shr edx, 0x3f; ret; 
0x0000000000401170: shr rdx, 0x3f; ret; 
0x0000000000401162: sub eax, eax; ret; 
0x0000000000401259: sub esp, 8; add rsp, 8; ret; 
0x0000000000401005: sub esp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x0000000000401161: sub rax, rax; ret; 
0x0000000000401258: sub rsp, 8; add rsp, 8; ret; 
0x0000000000401004: sub rsp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x00000000004011c3: test byte ptr [rax - 0x77], -0x3a; ret; 
0x000000000040109a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x0000000000401010: test eax, eax; je 0x1016; call rax; 
0x0000000000401010: test eax, eax; je 0x1016; call rax; add rsp, 8; ret; 
0x00000000004010c3: test eax, eax; je 0x10d0; mov edi, 0x404038; jmp rax; 
0x0000000000401105: test eax, eax; je 0x1110; mov edi, 0x404038; jmp rax; 
0x000000000040100f: test rax, rax; je 0x1016; call rax; 
0x000000000040100f: test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x00000000004010c2: test rax, rax; je 0x10d0; mov edi, 0x404038; jmp rax; 
0x0000000000401104: test rax, rax; je 0x1110; mov edi, 0x404038; jmp rax; 
0x0000000000401159: xor ecx, ecx; mov rcx, rdx; idiv edx; ret; 
0x00000000004011b6: xor edi, edi; nop; nop; xor r12, r12; mov r12, rax; ret; 
0x00000000004011c2: xor esi, esi; mov rsi, rax; ret; 
0x00000000004011bb: xor esp, esp; mov r12, rax; ret; 
0x00000000004011ba: xor r12, r12; mov r12, rax; ret; 
0x0000000000401158: xor rcx, rcx; mov rcx, rdx; idiv edx; ret; 
0x00000000004011c1: xor rsi, rsi; mov rsi, rax; ret; 
0x0000000000401257: cli; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401003: cli; sub rsp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x00000000004010a3: cli; ret; 
0x0000000000401254: endbr64; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401000: endbr64; sub rsp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x00000000004010a0: endbr64; ret; 
0x0000000000401095: hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040115a: leave; mov rcx, rdx; idiv edx; ret; 
0x0000000000401250: leave; ret; 
0x00000000004011b0: nop; pop rbp; ret; 
0x00000000004011b9: nop; xor r12, r12; mov r12, rax; ret; 
0x000000000040124f: nop; leave; ret; 
0x00000000004011b8: nop; nop; xor r12, r12; mov r12, rax; ret; 
0x00000000004011c8: nop; nop; nop; nop; syscall; 
0x00000000004011c9: nop; nop; nop; syscall; 
0x00000000004011c9: nop; nop; nop; syscall; inc al; ret; 
0x00000000004011ca: nop; nop; syscall; 
0x00000000004011ca: nop; nop; syscall; inc al; ret; 
0x00000000004010cf: nop; ret; 
0x00000000004011cb: nop; syscall; 
0x00000000004011cb: nop; syscall; inc al; ret; 
0x000000000040101a: ret; 
0x00000000004011cc: syscall; 
0x00000000004011cc: syscall; inc al; ret; 

136 gadgets found
