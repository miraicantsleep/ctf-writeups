


Gadgets
=======


0x000000000040108c: adc dword ptr [rax], eax; call qword ptr [rip + 0x2f5b]; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x00000000004010fe: adc dword ptr [rax], edi; test rax, rax; je 0x1110; mov edi, 0x404010; jmp rax; 
0x0000000000401090: adc eax, 0x2f5b; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x00000000004010bc: adc edi, dword ptr [rax]; test rax, rax; je 0x10d0; mov edi, 0x404010; jmp rax; 
0x000000000040112c: adc edx, dword ptr [rbp + 0x48]; mov ebp, esp; call 0x10b0; mov byte ptr [rip + 0x2ed3], 1; pop rbp; ret; 
0x0000000000401094: add ah, dh; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040108e: add bh, bh; adc eax, 0x2f5b; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040100e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000401179: add byte ptr [rax], al; add byte ptr [rax], al; call 0x1060; nop; leave; ret; 
0x000000000040109c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x00000000004010be: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x10d0; mov edi, 0x404010; jmp rax; 
0x0000000000401100: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x1110; mov edi, 0x404010; jmp rax; 
0x000000000040117b: add byte ptr [rax], al; call 0x1060; nop; leave; ret; 
0x000000000040109e: add byte ptr [rax], al; endbr64; ret; 
0x0000000000401186: add byte ptr [rax], al; endbr64; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401093: add byte ptr [rax], al; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040100d: add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; 
0x000000000040100d: add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x00000000004010c0: add byte ptr [rax], al; test rax, rax; je 0x10d0; mov edi, 0x404010; jmp rax; 
0x0000000000401102: add byte ptr [rax], al; test rax, rax; je 0x1110; mov edi, 0x404010; jmp rax; 
0x000000000040113b: add byte ptr [rcx], al; pop rbp; ret; 
0x000000000040108d: add dil, dil; adc eax, 0x2f5b; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040100a: add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; 
0x000000000040100a: add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x0000000000401017: add esp, 8; ret; 
0x0000000000401016: add rsp, 8; ret; 
0x000000000040117d: call 0x1060; nop; leave; ret; 
0x0000000000401131: call 0x10b0; mov byte ptr [rip + 0x2ed3], 1; pop rbp; ret; 
0x000000000040108f: call qword ptr [rip + 0x2f5b]; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401014: call rax; 
0x0000000000401014: call rax; add rsp, 8; ret; 
0x00000000004010a3: cli; ret; 
0x000000000040118b: cli; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401003: cli; sub rsp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x00000000004010a0: endbr64; ret; 
0x0000000000401188: endbr64; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401000: endbr64; sub rsp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x0000000000401095: hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401006: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; 
0x0000000000401012: je 0x1016; call rax; 
0x0000000000401012: je 0x1016; call rax; add rsp, 8; ret; 
0x00000000004010bb: je 0x10d0; mov eax, 0; test rax, rax; je 0x10d0; mov edi, 0x404010; jmp rax; 
0x00000000004010c5: je 0x10d0; mov edi, 0x404010; jmp rax; 
0x00000000004010fd: je 0x1110; mov eax, 0; test rax, rax; je 0x1110; mov edi, 0x404010; jmp rax; 
0x0000000000401107: je 0x1110; mov edi, 0x404010; jmp rax; 
0x00000000004010cc: jmp rax; 
0x0000000000401183: leave; ret; 
0x0000000000401136: mov byte ptr [rip + 0x2ed3], 1; pop rbp; ret; 
0x0000000000401178: mov eax, 0; call 0x1060; nop; leave; ret; 
0x00000000004010bd: mov eax, 0; test rax, rax; je 0x10d0; mov edi, 0x404010; jmp rax; 
0x00000000004010ff: mov eax, 0; test rax, rax; je 0x1110; mov edi, 0x404010; jmp rax; 
0x0000000000401009: mov eax, dword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x0000000000401009: mov eax, dword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x000000000040112f: mov ebp, esp; call 0x10b0; mov byte ptr [rip + 0x2ed3], 1; pop rbp; ret; 
0x00000000004010c7: mov edi, 0x404010; jmp rax; 
0x0000000000401176: mov edi, eax; mov eax, 0; call 0x1060; nop; leave; ret; 
0x0000000000401008: mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x0000000000401008: mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x000000000040112e: mov rbp, rsp; call 0x10b0; mov byte ptr [rip + 0x2ed3], 1; pop rbp; ret; 
0x0000000000401175: mov rdi, rax; mov eax, 0; call 0x1060; nop; leave; ret; 
0x0000000000401098: nop dword ptr [rax + rax]; endbr64; ret; 
0x0000000000401097: nop dword ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401096: nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401182: nop; leave; ret; 
0x00000000004010cf: nop; ret; 
0x0000000000401007: or byte ptr [rax - 0x75], cl; add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; 
0x00000000004010c6: or dword ptr [rdi + 0x404010], edi; jmp rax; 
0x000000000040113d: pop rbp; ret; 
0x000000000040112d: push rbp; mov rbp, rsp; call 0x10b0; mov byte ptr [rip + 0x2ed3], 1; pop rbp; ret; 
0x000000000040101a: ret; 
0x0000000000401011: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000040118d: sub esp, 8; add rsp, 8; ret; 
0x0000000000401005: sub esp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x000000000040118c: sub rsp, 8; add rsp, 8; ret; 
0x0000000000401004: sub rsp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x000000000040109a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x0000000000401010: test eax, eax; je 0x1016; call rax; 
0x0000000000401010: test eax, eax; je 0x1016; call rax; add rsp, 8; ret; 
0x00000000004010c3: test eax, eax; je 0x10d0; mov edi, 0x404010; jmp rax; 
0x0000000000401105: test eax, eax; je 0x1110; mov edi, 0x404010; jmp rax; 
0x000000000040100f: test rax, rax; je 0x1016; call rax; 
0x000000000040100f: test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x00000000004010c2: test rax, rax; je 0x10d0; mov edi, 0x404010; jmp rax; 
0x0000000000401104: test rax, rax; je 0x1110; mov edi, 0x404010; jmp rax; 

84 gadgets found
